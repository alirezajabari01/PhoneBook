// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneBook.Persistence.EF.Context;

#nullable disable

namespace PhoneBook.Persistence.EF.Migrations
{
    [DbContext(typeof(PhoneBookContext))]
    [Migration("20241010201147_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhoneBook.Domain.PhoneBooks.PhoneBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PhoneBooks");
                });

            modelBuilder.Entity("PhoneBook.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhoneBook.Domain.PhoneBooks.PhoneBook", b =>
                {
                    b.HasOne("PhoneBook.Domain.Users.User", "User")
                        .WithMany("PhoneBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PhoneBook.Domain.Users.ValueObjects.UserName", "UserName", b1 =>
                        {
                            b1.Property<long>("PhoneBookId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(32)
                                .HasColumnType("NVarChar")
                                .HasColumnName("UserName");

                            b1.HasKey("PhoneBookId");

                            b1.ToTable("PhoneBooks");

                            b1.WithOwner()
                                .HasForeignKey("PhoneBookId");
                        });

                    b.OwnsOne("PhoneBook.Domain.PhoneBooks.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<long>("PhoneBookId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("NVarChar")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("PhoneBookId");

                            b1.ToTable("PhoneBooks");

                            b1.WithOwner()
                                .HasForeignKey("PhoneBookId");
                        });

                    b.Navigation("PhoneNumber")
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserName")
                        .IsRequired();
                });

            modelBuilder.Entity("PhoneBook.Domain.Users.User", b =>
                {
                    b.OwnsOne("PhoneBook.Domain.Users.ValueObjects.UserName", "UserName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(32)
                                .HasColumnType("NVarChar")
                                .HasColumnName("UserName");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("PhoneBook.Domain.Users.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("NVarChar")
                                .HasColumnName("Password");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("UserName")
                        .IsRequired();
                });

            modelBuilder.Entity("PhoneBook.Domain.Users.User", b =>
                {
                    b.Navigation("PhoneBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
